% Encoding: UTF-8

@Article{43044,
  author   = {E. J. Chikofsky and J. H. Cross},
  title    = {Reverse engineering and design recovery: a taxonomy},
  journal  = {IEEE Software},
  year     = {1990},
  volume   = {7},
  number   = {1},
  pages    = {13-17},
  month    = {Jan},
  issn     = {0740-7459},
  doi      = {10.1109/52.43044},
  file     = {:Literatur/00043044.pdf:PDF},
  keywords = {nomenclature;software engineering;design recovery;taxonomy;computer-aided software engineering;maintenance;enhancement;existing systems;reverse-engineering approaches;forward engineering;redocumentation;restructuring;reengineering;Reverse engineering;Taxonomy;Software maintenance;Hardware;Software systems;Software performance;Water heating;Engineering drawings;Cloning;Control systems},
}

@Manual{JuraMicrocontroller,
  title        = {HT46F46E/HT46F47E/HT46F48E/HT46F49E Cost-Effective A/D Flash MCU with EEPROM},
  organization = {Holtek Semiconductor Inc.},
  address      = {Hsinchu, Taiwan},
  edition      = {Rev. 1.50},
  month        = apr,
  year         = {2017},
  note         = {http://www.holtek.com/productdetail/-/vg/46f4xe},
  abstract     = {The Cost-Effective A/D Flash Type MCU with EEPROM Devices are a series of 8-bit high performance RISC architecture microcontrollers, designed especially for applications that interface directly to analog signals, such as those from sensors. All devices include an integrated multi-channel Analog to Digital Converter in addition to one or two Pulse Width Modulation outputs. The usual Holtek MCU features such as power down and wake-up functions, oscillator options, programmable frequency divider, etc. combine to ensure user applications require a minimum of external components.

The benefits of integrated A/D and PWM functions, in addition to low power consumption, high performance, I/O flexibility and low-cost, provide these devices with the versatility to suit a wide range of application possibilities such as sensor signal processing, motor driving, industrial control, consumer products, subsystem controllers, etc. Many features are common to all devices, however, they differ in areas such as I/O pin count, Program Memory capacity, A/D resolution, stack capacity and package types.},
  file         = {:Literatur/HT46f4xev150.pdf:PDF},
  url          = {http://www.holtek.com.tw/documents/10179/11842/HT46f4xev150.pdf},
}

@MastersThesis{BachelorarbeitDeLonghi,
  author   = {Fabian Off},
  title    = {Reverse-engineering a De’Longhi Coffee Maker to precisely bill Coffee Consumption},
  school   = {Universität Magdeburg},
  year     = {2018},
  month    = feb,
  abstract = {For billing coffee, the faculty of Communication and Networked Systems (ComSys) is look-
ing for a way to monitor the usage of the faculties’ coffee maker. This thesis describes
the reverse-engineering of a De’Longhi Coffee Maker to allow for precise billing of coffee
consumption.
Currently, consumption is measured by manually keeping track of who’s ordered a coffee
on a sheet of paper next to the coffee maker. This method has inherent problems: as each
coffee is billed the same amount, it is not based on the actual amount of coffee but rather
the count of beverages. A small cup of very light coffee costs the same as a large cup of a
very strong brew - even though it consumes less actual beans. Also, this method is prone
to error: people may forget to make a mark when ordering and thus overall amounts may
be skewed. Finally, a list kept up-to-date manually can’t be analyzed over time and does
not allow for reporting of coffee consumption or even prediction of when to order new coffee
beans.
This thesis solves the problems associated with manually keeping track of consumption by
developing an automated method of monitoring the coffee maker. This is implemented in
the form of a device that monitors and controls the coffee maker. Further, a billing system
is developed to order beverages as well as keep track of the actual consumption per user.
Precise measurements are conducted to confirm the assumptions about the machine’s op-
eration and to calibrate the billing to the real consumption.
As a result of the thesis, an understanding of the machine’s internal communications bus
and the protocol used on that bus was developed. This understanding is published in the
form of a protocol definition as well as a verification algorithm to validate the received
data.},
  file     = {:Literatur/2018-Fabian Off - Reverse-engineering a DeLonghi Coffee Maker to precisely bill Coffee Consumption.pdf:PDF},
}

@book{Solr-599853700,
  title = {Software engineering},
  author = {Saleh, Kassem A.},
  address = {Boca Raton, Fla.},
  publisher = {Ross},
  year = {2009},
  isbn = { 1932159940 9781932159943 },
  note = {Literaturangaben},
}

@Misc{GitCoffeeMachine,
  author       = {Maximilian Köstler},
  title        = {CoffeeMachine},
  howpublished = {Git Repository},
  month        = jan,
  year         = {2018},
  note         = {nicht öffentlich},
  abstract     = {The material in this repositoriy allows a Jura coffee machine to be remotely controlled via a connected computer.
Additionally, support for WAMP remote procedures and a web interface are provided.},
  keywords     = {git},
  url          = {https://collaborating.tuhh.de/e-17/General/CoffeeMachine},
}

@Comment{jabref-meta: databaseType:bibtex;}
